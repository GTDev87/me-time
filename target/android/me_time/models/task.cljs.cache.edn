;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name me-time.models.task, :imports nil, :requires {me-time.models.timer me-time.models.timer}, :uses {create-timer me-time.models.timer}, :defs {Task {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name me-time.models.task/Task, :file "src/me_time/models/task.cljs", :end-column 16, :type true, :column 12, :internal-ctor true, :line 5, :record true, :end-line 5, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Task {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task.cljs", :line 5, :column 12, :end-line 5, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([name goal-time timer]))}, :name me-time.models.task/->Task, :variadic false, :file "src/me_time/models/task.cljs", :end-column 16, :method-params ([name goal-time timer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 5, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists (quote ([name goal-time timer]))}, map->Task {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task.cljs", :line 5, :column 12, :end-line 5, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__18416]))}, :name me-time.models.task/map->Task, :variadic false, :file "src/me_time/models/task.cljs", :end-column 16, :method-params ([G__18416]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18416]))}, wrap-task {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task.cljs", :line 8, :column 7, :end-line 8, :end-column 16, :arglists (quote ([task]))}, :name me-time.models.task/wrap-task, :variadic false, :file "src/me_time/models/task.cljs", :end-column 16, :method-params ([task]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([task]))}, create-task {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task.cljs", :line 11, :column 7, :end-line 11, :end-column 18, :arglists (quote ([name]))}, :name me-time.models.task/create-task, :variadic false, :file "src/me_time/models/task.cljs", :end-column 18, :method-params ([name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, update-task-name {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task.cljs", :line 14, :column 7, :end-line 14, :end-column 23, :arglists (quote ([task name]))}, :name me-time.models.task/update-task-name, :variadic false, :file "src/me_time/models/task.cljs", :end-column 23, :method-params ([task name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([task name]))}, update-goal-time {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task.cljs", :line 17, :column 7, :end-line 17, :end-column 23, :arglists (quote ([task goal-time]))}, :name me-time.models.task/update-goal-time, :variadic false, :file "src/me_time/models/task.cljs", :end-column 23, :method-params ([task goal-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([task goal-time]))}, update-timer {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task.cljs", :line 20, :column 7, :end-line 20, :end-column 19, :arglists (quote ([task update-fn & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(task update-fn args)], :arglists ([task update-fn & args]), :arglists-meta (nil)}}, :name me-time.models.task/update-timer, :variadic true, :file "src/me_time/models/task.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(task update-fn args)], :arglists ([task update-fn & args]), :arglists-meta (nil)}, :method-params [(task update-fn args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists ([task update-fn & args])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:timer :name timer :goal-time name goal-time}, :order [:name :goal-time :timer name goal-time timer]}, :doc nil}