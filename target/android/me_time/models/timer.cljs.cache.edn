;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name me-time.models.timer, :imports nil, :requires nil, :uses nil, :defs {Timer {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name me-time.models.timer/Timer, :file "src/me_time/models/timer.cljs", :end-column 17, :type true, :column 12, :internal-ctor true, :line 4, :record true, :end-line 4, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Timer {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/timer.cljs", :line 4, :column 12, :end-line 4, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([duration-milliseconds active start-time]))}, :name me-time.models.timer/->Timer, :variadic false, :file "src/me_time/models/timer.cljs", :end-column 17, :method-params ([duration-milliseconds active start-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 4, :end-line 4, :max-fixed-arity 3, :fn-var true, :arglists (quote ([duration-milliseconds active start-time]))}, map->Timer {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/timer.cljs", :line 4, :column 12, :end-line 4, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__18406]))}, :name me-time.models.timer/map->Timer, :variadic false, :file "src/me_time/models/timer.cljs", :end-column 17, :method-params ([G__18406]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18406]))}, timer-running? {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/timer.cljs", :line 7, :column 7, :end-line 7, :end-column 21, :arglists (quote ([timer]))}, :name me-time.models.timer/timer-running?, :variadic false, :file "src/me_time/models/timer.cljs", :end-column 21, :method-params ([timer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([timer]))}, wrap-timer {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/timer.cljs", :line 9, :column 7, :end-line 9, :end-column 17, :arglists (quote ([timer]))}, :name me-time.models.timer/wrap-timer, :variadic false, :file "src/me_time/models/timer.cljs", :end-column 17, :method-params ([timer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([timer]))}, create-timer {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/timer.cljs", :line 12, :column 7, :end-line 12, :end-column 19, :arglists (quote ([]))}, :name me-time.models.timer/create-timer, :variadic false, :file "src/me_time/models/timer.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-tick {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/timer.cljs", :line 15, :column 7, :end-line 15, :end-column 18, :arglists (quote ([timer date-time-now]))}, :name me-time.models.timer/update-tick, :variadic false, :file "src/me_time/models/timer.cljs", :end-column 18, :method-params ([timer date-time-now]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([timer date-time-now]))}, stop-timer {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/timer.cljs", :line 21, :column 7, :end-line 21, :end-column 17, :arglists (quote ([timer]))}, :name me-time.models.timer/stop-timer, :variadic false, :file "src/me_time/models/timer.cljs", :end-column 17, :method-params ([timer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([timer]))}, start-timer {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/timer.cljs", :line 26, :column 7, :end-line 26, :end-column 18, :arglists (quote ([timer date-time-now]))}, :name me-time.models.timer/start-timer, :variadic false, :file "src/me_time/models/timer.cljs", :end-column 18, :method-params ([timer date-time-now]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([timer date-time-now]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:duration-milliseconds :start-time duration-milliseconds start-time :active active}, :order [:duration-milliseconds :active :start-time duration-milliseconds active start-time]}, :doc nil}