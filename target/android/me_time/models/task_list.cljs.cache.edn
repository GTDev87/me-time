;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name me-time.models.task-list, :imports nil, :requires {me-time.models.task me-time.models.task}, :uses {create-task me-time.models.task}, :defs {->TaskList {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task-list.cljs", :line 7, :column 12, :end-line 7, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([task-contexts next-id]))}, :name me-time.models.task-list/->TaskList, :variadic false, :file "src/me_time/models/task-list.cljs", :end-column 20, :method-params ([task-contexts next-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([task-contexts next-id]))}, TaskContext {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name me-time.models.task-list/TaskContext, :file "src/me_time/models/task-list.cljs", :end-column 23, :type true, :column 12, :internal-ctor true, :line 5, :record true, :end-line 5, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, wrap-task-list {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task-list.cljs", :line 14, :column 7, :end-line 14, :end-column 21, :arglists (quote ([task-list]))}, :name me-time.models.task-list/wrap-task-list, :variadic false, :file "src/me_time/models/task-list.cljs", :end-column 21, :method-params ([task-list]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([task-list]))}, update-task-id {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task-list.cljs", :line 25, :column 7, :end-line 25, :end-column 21, :arglists (quote ([task-list id update-fn & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(task-list id update-fn args)], :arglists ([task-list id update-fn & args]), :arglists-meta (nil)}}, :name me-time.models.task-list/update-task-id, :variadic true, :file "src/me_time/models/task-list.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(task-list id update-fn args)], :arglists ([task-list id update-fn & args]), :arglists-meta (nil)}, :method-params [(task-list id update-fn args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists ([task-list id update-fn & args])}, TaskList {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name me-time.models.task-list/TaskList, :file "src/me_time/models/task-list.cljs", :end-column 20, :type true, :column 12, :internal-ctor true, :line 7, :record true, :end-line 7, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, remove-task {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task-list.cljs", :line 22, :column 7, :end-line 22, :end-column 18, :arglists (quote ([task-list id]))}, :name me-time.models.task-list/remove-task, :variadic false, :file "src/me_time/models/task-list.cljs", :end-column 18, :method-params ([task-list id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([task-list id]))}, map->TaskList {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task-list.cljs", :line 7, :column 12, :end-line 7, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__18440]))}, :name me-time.models.task-list/map->TaskList, :variadic false, :file "src/me_time/models/task-list.cljs", :end-column 20, :method-params ([G__18440]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18440]))}, ->TaskContext {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task-list.cljs", :line 5, :column 12, :end-line 5, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([task id]))}, :name me-time.models.task-list/->TaskContext, :variadic false, :file "src/me_time/models/task-list.cljs", :end-column 23, :method-params ([task id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([task id]))}, update-all-task {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task-list.cljs", :line 37, :column 7, :end-line 37, :end-column 22, :arglists (quote ([task-list update-fn & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(task-list update-fn args)], :arglists ([task-list update-fn & args]), :arglists-meta (nil)}}, :name me-time.models.task-list/update-all-task, :variadic true, :file "src/me_time/models/task-list.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(task-list update-fn args)], :arglists ([task-list update-fn & args]), :arglists-meta (nil)}, :method-params [(task-list update-fn args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists ([task-list update-fn & args])}, create-task-list {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task-list.cljs", :line 10, :column 7, :end-line 10, :end-column 23, :arglists (quote ([]))}, :name me-time.models.task-list/create-task-list, :variadic false, :file "src/me_time/models/task-list.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-task {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task-list.cljs", :line 17, :column 7, :end-line 17, :end-column 15, :arglists (quote ([task-list name]))}, :name me-time.models.task-list/add-task, :variadic false, :file "src/me_time/models/task-list.cljs", :end-column 15, :method-params ([task-list name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([task-list name]))}, create-task-context {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task-list.cljs", :line 12, :column 7, :end-line 12, :end-column 26, :arglists (quote ([task id]))}, :name me-time.models.task-list/create-task-context, :variadic false, :file "src/me_time/models/task-list.cljs", :end-column 26, :method-params ([task id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([task id]))}, map->TaskContext {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/models/task-list.cljs", :line 5, :column 12, :end-line 5, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__18432]))}, :name me-time.models.task-list/map->TaskContext, :variadic false, :file "src/me_time/models/task-list.cljs", :end-column 23, :method-params ([G__18432]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18432]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:task-contexts :next-id :task task-contexts next-id task :id id}, :order [:task :id task id :task-contexts :next-id task-contexts next-id]}, :doc nil}