;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name me-time.views.react-native.task-list, :imports nil, :requires {r reagent.core, reagent.core reagent.core, re-frame.core re-frame.core, me-time.views.react-native.task me-time.views.react-native.task, me-time.models.task-list me-time.models.task-list}, :uses {subscribe re-frame.core, dispatch-sync re-frame.core, wrap-task-list me-time.models.task-list, update-task-id me-time.models.task-list, dispatch re-frame.core, view-task me-time.views.react-native.task, add-task me-time.models.task-list}, :defs {view {:name me-time.views.react-native.task-list/view, :file "src/me_time/views/react-native/task-list.cljs", :line 9, :column 1, :end-line 9, :end-column 10, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/task-list.cljs", :line 9, :column 6, :end-line 9, :end-column 10}}, text {:name me-time.views.react-native.task-list/text, :file "src/me_time/views/react-native/task-list.cljs", :line 10, :column 1, :end-line 10, :end-column 10, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/task-list.cljs", :line 10, :column 6, :end-line 10, :end-column 10}}, touchable-native-feedback {:name me-time.views.react-native.task-list/touchable-native-feedback, :file "src/me_time/views/react-native/task-list.cljs", :line 11, :column 1, :end-line 11, :end-column 31, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/task-list.cljs", :line 11, :column 6, :end-line 11, :end-column 31}}, view-task-context {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/task-list.cljs", :line 13, :column 7, :end-line 13, :end-column 24, :arglists (quote ([task-context-data task-context-dispatch-partial]))}, :name me-time.views.react-native.task-list/view-task-context, :variadic false, :file "src/me_time/views/react-native/task-list.cljs", :end-column 24, :method-params ([task-context-data task-context-dispatch-partial]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([task-context-data task-context-dispatch-partial]))}, view-task-list {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/task-list.cljs", :line 22, :column 7, :end-line 22, :end-column 21, :arglists (quote ([task-list-data update-list-atom]))}, :name me-time.views.react-native.task-list/view-task-list, :variadic false, :file "src/me_time/views/react-native/task-list.cljs", :end-column 21, :method-params ([task-list-data update-list-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([task-list-data update-list-atom]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:on-press :task-contexts :color :next-id :task :background :flexDirection :style :id :fontWeight :textAlign :backgroundColor :alignItems :margin}, :order [:id :style :flexDirection :task :margin :alignItems :task-contexts :on-press :background :next-id :backgroundColor :color :textAlign :fontWeight]}, :doc nil}