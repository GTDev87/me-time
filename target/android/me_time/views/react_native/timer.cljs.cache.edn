;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name me-time.views.react-native.timer, :imports nil, :requires {r reagent.core, reagent.core reagent.core, me-time.models.timer me-time.models.timer}, :uses {wrap-timer me-time.models.timer, stop-timer me-time.models.timer, start-timer me-time.models.timer}, :defs {view {:name me-time.views.react-native.timer/view, :file "src/me_time/views/react-native/timer.cljs", :line 7, :column 1, :end-line 7, :end-column 10, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/timer.cljs", :line 7, :column 6, :end-line 7, :end-column 10}}, text {:name me-time.views.react-native.timer/text, :file "src/me_time/views/react-native/timer.cljs", :line 8, :column 1, :end-line 8, :end-column 10, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/timer.cljs", :line 8, :column 6, :end-line 8, :end-column 10}}, touchable-native-feedback {:name me-time.views.react-native.timer/touchable-native-feedback, :file "src/me_time/views/react-native/timer.cljs", :line 9, :column 1, :end-line 9, :end-column 31, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/timer.cljs", :line 9, :column 6, :end-line 9, :end-column 31}}, view-timer {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/timer.cljs", :line 11, :column 7, :end-line 11, :end-column 17, :arglists (quote ([timer-data timer-dispatch]))}, :name me-time.views.react-native.timer/view-timer, :variadic false, :file "src/me_time/views/react-native/timer.cljs", :end-column 17, :method-params ([timer-data timer-dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([timer-data timer-dispatch]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:on-press :color :duration-milliseconds :background :flexDirection :style :active :fontWeight :textAlign :backgroundColor :on-long-press}, :order [:active :style :flexDirection :duration-milliseconds :on-press :on-long-press :background :backgroundColor :color :textAlign :fontWeight]}, :doc nil}