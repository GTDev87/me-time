;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name me-time.views.react-native.task, :imports nil, :requires {r reagent.core, reagent.core reagent.core, re-frame.core re-frame.core, me-time.views.react-native.timer me-time.views.react-native.timer, me-time.models.task me-time.models.task}, :uses {subscribe re-frame.core, view-timer me-time.views.react-native.timer, dispatch-sync re-frame.core, wrap-task me-time.models.task, update-timer me-time.models.task, dispatch re-frame.core, update-task-name me-time.models.task}, :defs {touchable-native-feedback {:name me-time.views.react-native.task/touchable-native-feedback, :file "src/me_time/views/react-native/task.cljs", :line 9, :column 1, :end-line 9, :end-column 31, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/task.cljs", :line 9, :column 6, :end-line 9, :end-column 31}}, view {:name me-time.views.react-native.task/view, :file "src/me_time/views/react-native/task.cljs", :line 11, :column 1, :end-line 11, :end-column 10, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/task.cljs", :line 11, :column 6, :end-line 11, :end-column 10}}, text {:name me-time.views.react-native.task/text, :file "src/me_time/views/react-native/task.cljs", :line 12, :column 1, :end-line 12, :end-column 10, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/task.cljs", :line 12, :column 6, :end-line 12, :end-column 10}}, view-task {:protocol-inline nil, :meta {:file "/Users/GT/work/re-natal-projects/me-time/src/me_time/views/react-native/task.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([task-data task-dispatch-partial]))}, :name me-time.views.react-native.task/view-task, :variadic false, :file "src/me_time/views/react-native/task.cljs", :end-column 16, :method-params ([task-data task-dispatch-partial]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([task-data task-dispatch-partial]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:on-press :color :timer :name :background :flexDirection :style :fontWeight :textAlign :backgroundColor}, :order [:style :flexDirection :on-press :background :backgroundColor :color :textAlign :fontWeight :name :timer]}, :doc nil}